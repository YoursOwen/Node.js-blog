var child_process = require('child_process')
var pkg = require('./package.json')
var semver = require('semver')
var fs = require('fs')
var config = require('./config')
var moment = require('moment')
require('colors');
var parseArgv = require('./parse_argv');
var todayStr = moment().format('YYYY-MM-DD')

// START 检查是否需要检查更新
var customContent
try {
  customContent = fs.readFileSync(config.tnpmcustomconfig, 'utf-8')
  customContent = JSON.parse(customContent);
  if (customContent.updateDate == todayStr && customContent.needUpdate == false) {
    return;
  }
} catch (e) {
  // 文件不存在
}
customContent = customContent || {}

// END 检查是否需要检查更新

var program = parseArgv();

var args = []
if (program.proxy) {
  args.push('--proxy=' + program.proxy)
}
if (program.registry) {
  args.push('--registry=' + program.registry)
}

var result = child_process.execSync('tnpm info @tencent/tnpm version ' + args.join(' '))

var currentVersion = pkg.version
var latestVersion = result.toString().trim()
var needUpdate = semver.neq(latestVersion, currentVersion)
if (needUpdate|| process.env.TNPM_DEBUG) {
  console.log('目前最新版本的 @tencent/tnpm 为：' + latestVersion.green + ', 你的当前版本为：' + currentVersion.red)
  console.log('升级命令：`$ ' + 'tnpm install -g tnpm'.green + '`')
}
customContent.updateDate = todayStr;
customContent.needUpdate = needUpdate;
// 写回缓存
fs.writeFileSync(config.tnpmcustomconfig, JSON.stringify(customContent));
